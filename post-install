#!/usr/bin/env bash

#
# Perform post-installation configuration.
#
# XXX(ndhoule): This script isn't yet tested; it currently serves mostly to document as-of-yet
# uncaptured setup steps.
#

set -o errexit
set -o nounset
set -o pipefail

log_info() {
  printf "[INFO]: %s\n" "$*"
}

log_warn() {
  printf "[WARN]: %s\n" "$*" >&2
}

log_error() {
  printf "[ERROR]: %s\n" "$*" >&2
}

# TODO: Move dotfile symlinking to this script, stow won't be present on Fedora Silverblue systems until reboot

if command -v zsh > /dev/null 2>&1 && [[ "$(getent passwd "$(whoami)" | awk -F : '{print $NF}' | rev | cut -d '/' -f 1 | rev)" != "zsh" ]]; then
  chsh --shell "$(which zsh)"
  log_info "The user shell has been changed to zsh. Please restart your session for changes to take effect, and then re-run this script."
  exit 0
fi

#
# Install shell plugins
#

if command -v antidote > /dev/null 2>&1; then
  antidote bundle
else
  log_warn "\`antidote\` not found in \$PATH. Skipping zsh plugin installation."
fi

#
# Install language runtimes
#

ASDF_DIR="${ASDF_DIR:-"${HOME}/.asdf"}"

# FIXME(ndhoule): This isn't exactly right but whatever. It assumes that there's no system asdf
# install available and that the user wants a local install, which may not be right but again who
# cares right now
if [ ! -d "${ASDF_DIR}" ]; then
  git clone https://github.com/asdf-vm/asdf.git "${ASDF_DIR}" --branch v0.13.1 || echo "test"
fi

if ! command -v asdf > /dev/null 2>&1; then
  source "${ASDF_DIR}/asdf.sh"
fi

if command -v asdf > /dev/null 2>&1; then
  asdf plugin add golang
  asdf plugin add lua-language-server
  asdf plugin add nodejs

  asdf install
else
  log_warn "\`asdf\` not found in \$PATH. Skipping tool installation."
fi

# FIXME(ndhoule): This relies on Packer being installed already I think
if command -v nvim > /dev/null 2>&1; then
  if test -e "${XDG_CONFIG_HOME}/nvim/plugin/packer_compiled.lua"; then
    rm "${XDG_CONFIG_HOME}/nvim/plugin/packer_compiled.lua"
  fi

  if ! test -d "${XDG_DATA_HOME}/site/pack/packer/start/packer.nvim"; then
    git clone https://github.com/wbthomason/packer.nvim "${XDG_DATA_HOME}/site/pack/packer/start/packer.nvim"
  fi

  nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
  # TODO(ndhoule): :TSInstallSync
fi

"${HOME}/.cache/tmux/plugins/tpm/scripts/install_plugins.sh"
