#!/usr/bin/env bash

#
# Install Arch Linux-specific dependencies.
#

set -o errexit
set -o nounset
set -o pipefail

DISTRO_NAME=$(hostnamectl | grep "Operating System" | cut -d ':' -f 2 | xargs)

if [[ "${DISTRO_NAME}" != "Arch Linux" ]]; then
  echo "ERROR: This script can only be run on Arch Linux."
  exit 1
fi

CURRENT_SCRIPT_PATH="$(
  cd "$(dirname "$0")"
  pwd -P
)"
PACKAGES_LIST="${CURRENT_SCRIPT_PATH}/packages.txt"
FLATPAKS_LIST="${CURRENT_SCRIPT_PATH}/flatpaks.txt"

if ! command -v yay > /dev/null 2>&1; then
  echo "ERROR: Could not find yay. Please install yay and re-run this script."
  exit 1
fi

while read -r pkg; do
  # Skip comments and empty lines
  if [[ -z "${pkg}" || "${pkg}" =~ ^# ]]; then
    continue
  fi

  # Lines may contain multiple packages, so permit word splitting
  # shellcheck disable=SC2086
  yay -S --noconfirm $pkg
done < "${PACKAGES_LIST}"

while read -r pkg; do
  # Skip comments and empty lines
  if [[ -z "${pkg}" || "${pkg}" =~ ^# ]]; then
    continue
  fi

  # Lines may (well, should) contain both the remote (e.g. `flatpak`) and the package name (e.g.
  # `org.gnome.Calculator`) separated by a space, so permit word splitting
  # shellcheck disable=SC2086
  flatpak install -y ${pkg}
done < "${FLATPAKS_LIST}"

# Enable system services
systemctl enable --now earlyoom.service
systemctl enable --now gdm.service
systemctl enable --now ntpd.service
systemctl enable --now org.cups.cupsd.service
systemctl enable --now pcscd.service

# Enable user services
systemctl --user enable --now yubikey-touch-detector.service
systemctl --user enable --now xdg-user-dirs-update.service

# Grant Zeal's Flatpak filesystem access to the configuration package in this repository.
# Gross.
flatpak override org.zealdocs.Zeal --user --filesystem="$(realpath ../../packages/zeal | sed "s|${HOME}|~|"):rw"
