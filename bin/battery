#!/usr/bin/env ruby

#
# Get the current state of the battery.
#
# Author:
#   Nathan Houle <nathan@nathanhoule.com>
#
# TODO:
# - Cross-platform
# - Gross, clean this thing up
#

require 'optparse'

def to_percent(*vals)
  (100 * vals.map(&:to_f).reduce(:/)).to_i
end

def darwin_battery
  mappings = { 'ExternalConnected' => :charging, 'MaxCapacity' => :max, 'CurrentCapacity' => :current }
  r_config = /"(ExternalConnected|MaxCapacity|CurrentCapacity)" = (.*)/

  Hash[`ioreg -n AppleSmartBattery -r`
    .split(/\r?\n/)
    .select { |s| s.match(r_config) }
    .map { |s| s.match(r_config).captures }
    .map { |kv| [mappings[kv[0]], kv[1]] }]
end

def battery(opts)
  stats = darwin_battery

  if opts[:charge_status]
    STDOUT.puts stats[:charging] === 'Yes' ? 'Charging' : 'Discharging'
    exit 0
  end

  STDOUT.puts "#{to_percent(stats[:current], stats[:max]).to_s}"
  exit 0
end

def parse_opts
  OptionParser.new do |opts|
    options = {}

    opts.separator "This demo prints the results of parsing the options."
    opts.version = "0.0.1"

    opts.on('--charge-status', 'Check if the battery is charging.') { options[:charge_status] = true }

    begin
      opts.parse!
      return options
    rescue OptionParser::ParseError => error
      $stderr.puts error
      $stderr.puts "\n"
      $stderr.puts opts.help
      exit 1
    end
  end
end

#
# Get the battery status.
#

opts = parse_opts
print battery(opts)
